name: Spring Cloud Demo CI/CD

on:
  push:
    branches: [ "main" ]
    tags:
      - 'v*'  # 推送标签时触发
  pull_request:
    branches: [ "main" ]

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3
    
    - name: Set up JDK 17
      uses: actions/setup-java@v3
      with:
        java-version: '17'
        distribution: 'temurin'
        cache: maven
    
    - name: Build and Test with Maven
      run: mvn -B package --file pom.xml
    
    - name: Upload Build Artifacts
      uses: actions/upload-artifact@v3
      with:
        name: microservices-jars
        path: |
          */target/*.jar
          !*/target/original-*.jar

  # Docker 构建和推送（如果需要的话，取消注释以下部分）
  # docker:
  #   needs: build
  #   runs-on: ubuntu-latest
  #   steps:
  #     - uses: actions/checkout@v3
  #     
  #     - name: Download build artifacts
  #       uses: actions/download-artifact@v3
  #       with:
  #         name: microservices-jars
  #     
  #     - name: Set up Docker Buildx
  #       uses: docker/setup-buildx-action@v2
  #     
  #     - name: Login to Docker Hub
  #       uses: docker/login-action@v2
  #       with:
  #         username: ${{ secrets.DOCKER_HUB_USERNAME }}
  #         password: ${{ secrets.DOCKER_HUB_TOKEN }}
  #     
  #     - name: Build and push Config Service
  #       uses: docker/build-push-action@v4
  #       with:
  #         context: ./config-service
  #         push: true
  #         tags: your-dockerhub-username/config-service:latest
  #     
  #     - name: Build and push Eureka Service
  #       uses: docker/build-push-action@v4
  #       with:
  #         context: ./eureka-service
  #         push: true
  #         tags: your-dockerhub-username/eureka-service:latest
  #     
  #     - name: Build and push Gateway Service
  #       uses: docker/build-push-action@v4
  #       with:
  #         context: ./gateway-service
  #         push: true
  #         tags: your-dockerhub-username/gateway-service:latest
  #     
  #     - name: Build and push User Service
  #       uses: docker/build-push-action@v4
  #       with:
  #         context: ./user-service
  #         push: true
  #         tags: your-dockerhub-username/user-service:latest

#   publish:
#     needs: build
#     runs-on: ubuntu-latest
#     if: startsWith(github.ref, 'refs/tags/v')
    
#     steps:
#       - uses: actions/checkout@v3
      
#       - name: Set up JDK 17
#         uses: actions/setup-java@v3
#         with:
#           java-version: '17'
#           distribution: 'temurin'
#           server-id: ossrh
#           server-username: MAVEN_USERNAME
#           server-password: MAVEN_PASSWORD
#           gpg-private-key: ${{ secrets.GPG_PRIVATE_KEY }}
#           gpg-passphrase: MAVEN_GPG_PASSPHRASE
          
#       - name: Download build artifacts
#         uses: actions/download-artifact@v3
#         with:
#           name: microservices-jars
          
#       - name: Publish to Maven Central
#         env:
#           MAVEN_USERNAME: ${{ secrets.OSSRH_USERNAME }}
#           MAVEN_PASSWORD: ${{ secrets.OSSRH_TOKEN }}
#           MAVEN_GPG_PASSPHRASE: ${{ secrets.GPG_PASSPHRASE }}
#         run: |
#           mvn --batch-mode deploy -P release
          
#       - name: Create Release
#         uses: softprops/action-gh-release@v1
#         with:
#           files: |
#             */target/*.jar
#             !*/target/original-*.jar
#           body: |
#             Release ${{ github.ref_name }}
            
#             This release has been published to Maven Central.
            
#             GroupId: top.likanug
#             Version: ${{ github.ref_name }}
#         env:
#           GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
